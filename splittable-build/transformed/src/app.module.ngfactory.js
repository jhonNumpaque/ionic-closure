/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";

const import0 = require('@angular/core/src/linker/ng_module_factory');
const import1 = require('./app.module');
const import2 = require('@angular/common/src/common_module');
const import3 = require('@angular/core/src/application_module');
const import4 = require('@angular/platform-browser/src/browser');
const import5 = require('@angular/http/src/http_module');
const import6 = require('@angular/forms/src/directives');
const import7 = require('@angular/forms/src/form_providers');
const import8 = require('ionic-angular/index');
const import9 = require('@angular/common/src/localization');
const import10 = require('ionic-angular/platform/dom-controller');
const import11 = require('ionic-angular/components/menu/menu-controller');
const import12 = require('ionic-angular/components/app/app');
const import13 = require('ionic-angular/gestures/gesture-controller');
const import14 = require('@angular/core/src/application_init');
const import15 = require('@angular/core/src/testability/testability');
const import16 = require('@angular/core/src/application_ref');
const import17 = require('@angular/core/src/linker/compiler');
const import18 = require('ionic-angular/gestures/gesture-config');
const import19 = require('@angular/platform-browser/src/dom/events/event_manager');
const import20 = require('@angular/platform-browser/src/dom/shared_styles_host');
const import21 = require('@angular/platform-browser/src/dom/dom_renderer');
const import22 = require('@angular/platform-browser/src/security/dom_sanitization_service');
const import23 = require('@angular/core/src/linker/view_utils');
const import24 = require('@angular/platform-browser/src/browser/title');
const import25 = require('@angular/http/src/backends/browser_xhr');
const import26 = require('@angular/http/src/base_response_options');
const import27 = require('@angular/http/src/backends/xhr_backend');
const import28 = require('@angular/http/src/base_request_options');
const import29 = require('@angular/forms/src/directives/radio_control_value_accessor');
const import30 = require('@angular/forms/src/form_builder');
const import31 = require('ionic-angular/components/action-sheet/action-sheet');
const import32 = require('ionic-angular/components/alert/alert');
const import33 = require('ionic-angular/util/events');
const import34 = require('ionic-angular/util/form');
const import35 = require('ionic-angular/tap-click/haptic');
const import36 = require('ionic-angular/platform/keyboard');
const import37 = require('ionic-angular/components/loading/loading');
const import38 = require('@angular/common/src/location/location');
const import39 = require('ionic-angular/components/modal/modal');
const import40 = require('ionic-angular/components/picker/picker');
const import41 = require('ionic-angular/components/popover/popover');
const import42 = require('ionic-angular/util/system-js-ng-module-loader');
const import43 = require('ionic-angular/tap-click/tap-click');
const import44 = require('ionic-angular/components/toast/toast');
const import45 = require('ionic-angular/transitions/transition-controller');
const import47 = require('../node_modules/ionic-angular/components/action-sheet/action-sheet-component.ngfactory');
const import48 = require('../node_modules/ionic-angular/components/alert/alert-component.ngfactory');
const import49 = require('../node_modules/ionic-angular/components/app/app-root.ngfactory');
const import50 = require('../node_modules/ionic-angular/components/loading/loading-component.ngfactory');
const import51 = require('../node_modules/ionic-angular/components/modal/modal-component.ngfactory');
const import52 = require('../node_modules/ionic-angular/components/picker/picker-component.ngfactory');
const import53 = require('../node_modules/ionic-angular/components/popover/popover-component.ngfactory');
const import54 = require('../node_modules/ionic-angular/components/toast/toast-component.ngfactory');
const import55 = require('./app.component.ngfactory');
const import56 = require('./pages/home/home.ngfactory');
const import57 = require('@angular/core/src/application_tokens');
const import58 = require('@angular/platform-browser/src/dom/events/dom_events');
const import59 = require('@angular/platform-browser/src/dom/events/key_events');
const import60 = require('@angular/platform-browser/src/dom/events/hammer_gestures');
const import61 = require('@angular/core/src/zone/ng_zone');
const import62 = require('@angular/platform-browser/src/dom/debug/ng_probe');
const import63 = require('./app.component');
const import64 = require('@angular/common/src/location/platform_location');
const import65 = require('@angular/common/src/location/location_strategy');
const import66 = require('ionic-angular/navigation/url-serializer');
const import67 = require('ionic-angular/navigation/deep-linker');
const import68 = require('ionic-angular/platform/platform-registry');
const import69 = require('ionic-angular/platform/platform');
const import70 = require('ionic-angular/config/config');
const import71 = require('ionic-angular/config/mode-registry');
const import72 = require('ionic-angular/transitions/transition-registry');
const import73 = require('@angular/core/src/console');
const import74 = require('@angular/core/src/i18n/tokens');
const import75 = require('@angular/core/src/error_handler');
const import76 = require('@angular/platform-browser/src/dom/dom_tokens');
const import77 = require('@angular/platform-browser/src/dom/animation_driver');
const import78 = require('@angular/core/src/render/api');
const import79 = require('@angular/core/src/security');
const import80 = require('@angular/core/src/change_detection/differs/iterable_differs');
const import81 = require('@angular/core/src/change_detection/differs/keyvalue_differs');
const import82 = require('@angular/http/src/interfaces');
const import83 = require('@angular/http/src/http');
const import84 = require('ionic-angular/components/app/app-root');
const import85 = require('ionic-angular/util/module-loader');
class AppModuleInjector extends import0.NgModuleInjector {
    constructor(parent) {
        super(parent, [import47.ActionSheetCmpNgFactory, import48.AlertCmpNgFactory, import49.IonicAppNgFactory, import50.LoadingCmpNgFactory, import51.ModalCmpNgFactory, import52.PickerCmpNgFactory, import53.PopoverCmpNgFactory, import54.ToastCmpNgFactory, import55.MyAppNgFactory, import55.MyAppNgFactory, import56.HomePageNgFactory, import49.IonicAppNgFactory], [import49.IonicAppNgFactory]);
    }
    get _LOCALE_ID_9() {
        if (this.__LOCALE_ID_9 == null) {
            this.__LOCALE_ID_9 = 'en-US';
        }
        return this.__LOCALE_ID_9;
    }
    get _NgLocalization_10() {
        if (this.__NgLocalization_10 == null) {
            this.__NgLocalization_10 = new import9.NgLocaleLocalization(this._LOCALE_ID_9);
        }
        return this.__NgLocalization_10;
    }
    get _ApplicationRef_25() {
        if (this.__ApplicationRef_25 == null) {
            this.__ApplicationRef_25 = this._ApplicationRef__24;
        }
        return this.__ApplicationRef_25;
    }
    get _Compiler_26() {
        if (this.__Compiler_26 == null) {
            this.__Compiler_26 = new import17.Compiler();
        }
        return this.__Compiler_26;
    }
    get _APP_ID_27() {
        if (this.__APP_ID_27 == null) {
            this.__APP_ID_27 = import57._appIdRandomProviderFactory();
        }
        return this.__APP_ID_27;
    }
    get _HAMMER_GESTURE_CONFIG_28() {
        if (this.__HAMMER_GESTURE_CONFIG_28 == null) {
            this.__HAMMER_GESTURE_CONFIG_28 = new import18.IonicGestureConfig();
        }
        return this.__HAMMER_GESTURE_CONFIG_28;
    }
    get _EVENT_MANAGER_PLUGINS_29() {
        if (this.__EVENT_MANAGER_PLUGINS_29 == null) {
            this.__EVENT_MANAGER_PLUGINS_29 = [new import58.DomEventsPlugin(), new import59.KeyEventsPlugin(), new import60.HammerGesturesPlugin(this._HAMMER_GESTURE_CONFIG_28)];
        }
        return this.__EVENT_MANAGER_PLUGINS_29;
    }
    get _EventManager_30() {
        if (this.__EventManager_30 == null) {
            this.__EventManager_30 = new import19.EventManager(this._EVENT_MANAGER_PLUGINS_29, this.parent.get(import61.NgZone));
        }
        return this.__EventManager_30;
    }
    get _DomSharedStylesHost_31() {
        if (this.__DomSharedStylesHost_31 == null) {
            this.__DomSharedStylesHost_31 = new import20.DomSharedStylesHost(this._DOCUMENT_13);
        }
        return this.__DomSharedStylesHost_31;
    }
    get _AnimationDriver_32() {
        if (this.__AnimationDriver_32 == null) {
            this.__AnimationDriver_32 = import4._resolveDefaultAnimationDriver();
        }
        return this.__AnimationDriver_32;
    }
    get _DomRootRenderer_33() {
        if (this.__DomRootRenderer_33 == null) {
            this.__DomRootRenderer_33 = new import21.DomRootRenderer_(this._DOCUMENT_13, this._EventManager_30, this._DomSharedStylesHost_31, this._AnimationDriver_32, this._APP_ID_27);
        }
        return this.__DomRootRenderer_33;
    }
    get _RootRenderer_34() {
        if (this.__RootRenderer_34 == null) {
            this.__RootRenderer_34 = import62._createConditionalRootRenderer(this._DomRootRenderer_33, this.parent.get(import62.NgProbeToken, null));
        }
        return this.__RootRenderer_34;
    }
    get _DomSanitizer_35() {
        if (this.__DomSanitizer_35 == null) {
            this.__DomSanitizer_35 = new import22.DomSanitizerImpl();
        }
        return this.__DomSanitizer_35;
    }
    get _Sanitizer_36() {
        if (this.__Sanitizer_36 == null) {
            this.__Sanitizer_36 = this._DomSanitizer_35;
        }
        return this.__Sanitizer_36;
    }
    get _ViewUtils_37() {
        if (this.__ViewUtils_37 == null) {
            this.__ViewUtils_37 = new import23.ViewUtils(this._RootRenderer_34, this._Sanitizer_36);
        }
        return this.__ViewUtils_37;
    }
    get _IterableDiffers_38() {
        if (this.__IterableDiffers_38 == null) {
            this.__IterableDiffers_38 = import3._iterableDiffersFactory();
        }
        return this.__IterableDiffers_38;
    }
    get _KeyValueDiffers_39() {
        if (this.__KeyValueDiffers_39 == null) {
            this.__KeyValueDiffers_39 = import3._keyValueDiffersFactory();
        }
        return this.__KeyValueDiffers_39;
    }
    get _SharedStylesHost_40() {
        if (this.__SharedStylesHost_40 == null) {
            this.__SharedStylesHost_40 = this._DomSharedStylesHost_31;
        }
        return this.__SharedStylesHost_40;
    }
    get _Title_41() {
        if (this.__Title_41 == null) {
            this.__Title_41 = new import24.Title();
        }
        return this.__Title_41;
    }
    get _BrowserXhr_42() {
        if (this.__BrowserXhr_42 == null) {
            this.__BrowserXhr_42 = new import25.BrowserXhr();
        }
        return this.__BrowserXhr_42;
    }
    get _ResponseOptions_43() {
        if (this.__ResponseOptions_43 == null) {
            this.__ResponseOptions_43 = new import26.BaseResponseOptions();
        }
        return this.__ResponseOptions_43;
    }
    get _XSRFStrategy_44() {
        if (this.__XSRFStrategy_44 == null) {
            this.__XSRFStrategy_44 = import5._createDefaultCookieXSRFStrategy();
        }
        return this.__XSRFStrategy_44;
    }
    get _XHRBackend_45() {
        if (this.__XHRBackend_45 == null) {
            this.__XHRBackend_45 = new import27.XHRBackend(this._BrowserXhr_42, this._ResponseOptions_43, this._XSRFStrategy_44);
        }
        return this.__XHRBackend_45;
    }
    get _RequestOptions_46() {
        if (this.__RequestOptions_46 == null) {
            this.__RequestOptions_46 = new import28.BaseRequestOptions();
        }
        return this.__RequestOptions_46;
    }
    get _Http_47() {
        if (this.__Http_47 == null) {
            this.__Http_47 = import5.httpFactory(this._XHRBackend_45, this._RequestOptions_46);
        }
        return this.__Http_47;
    }
    get _RadioControlRegistry_48() {
        if (this.__RadioControlRegistry_48 == null) {
            this.__RadioControlRegistry_48 = new import29.RadioControlRegistry();
        }
        return this.__RadioControlRegistry_48;
    }
    get _FormBuilder_49() {
        if (this.__FormBuilder_49 == null) {
            this.__FormBuilder_49 = new import30.FormBuilder();
        }
        return this.__FormBuilder_49;
    }
    get _AppRootToken_50() {
        if (this.__AppRootToken_50 == null) {
            this.__AppRootToken_50 = import63.MyApp;
        }
        return this.__AppRootToken_50;
    }
    get _DeepLinkConfigToken_51() {
        if (this.__DeepLinkConfigToken_51 == null) {
            this.__DeepLinkConfigToken_51 = { links: [{
                    loadChildren: '../pages/page-one/page-one.module#PageOneModule',
                    name: 'PageOne'
                }, {
                    loadChildren: '../pages/page-two/page-two.module#PageTwoModule',
                    name: 'PageTwo'
                }]
            };
        }
        return this.__DeepLinkConfigToken_51;
    }
    get _ActionSheetController_52() {
        if (this.__ActionSheetController_52 == null) {
            this.__ActionSheetController_52 = new import31.ActionSheetController(this._App_19);
        }
        return this.__ActionSheetController_52;
    }
    get _AlertController_53() {
        if (this.__AlertController_53 == null) {
            this.__AlertController_53 = new import32.AlertController(this._App_19);
        }
        return this.__AlertController_53;
    }
    get _Events_54() {
        if (this.__Events_54 == null) {
            this.__Events_54 = new import33.Events();
        }
        return this.__Events_54;
    }
    get _Form_55() {
        if (this.__Form_55 == null) {
            this.__Form_55 = new import34.Form();
        }
        return this.__Form_55;
    }
    get _Haptic_56() {
        if (this.__Haptic_56 == null) {
            this.__Haptic_56 = new import35.Haptic(this._Platform_15);
        }
        return this.__Haptic_56;
    }
    get _Keyboard_57() {
        if (this.__Keyboard_57 == null) {
            this.__Keyboard_57 = new import36.Keyboard(this._Config_16, this._Platform_15, this.parent.get(import61.NgZone), this._DomController_17);
        }
        return this.__Keyboard_57;
    }
    get _LoadingController_58() {
        if (this.__LoadingController_58 == null) {
            this.__LoadingController_58 = new import37.LoadingController(this._App_19);
        }
        return this.__LoadingController_58;
    }
    get _LocationStrategy_59() {
        if (this.__LocationStrategy_59 == null) {
            this.__LocationStrategy_59 = import8.provideLocationStrategy(this.parent.get(import64.PlatformLocation), this.parent.get(import65.APP_BASE_HREF, null), this._Config_16);
        }
        return this.__LocationStrategy_59;
    }
    get _Location_60() {
        if (this.__Location_60 == null) {
            this.__Location_60 = new import38.Location(this._LocationStrategy_59);
        }
        return this.__Location_60;
    }
    get _ModalController_61() {
        if (this.__ModalController_61 == null) {
            this.__ModalController_61 = new import39.ModalController(this._App_19);
        }
        return this.__ModalController_61;
    }
    get _PickerController_62() {
        if (this.__PickerController_62 == null) {
            this.__PickerController_62 = new import40.PickerController(this._App_19);
        }
        return this.__PickerController_62;
    }
    get _PopoverController_63() {
        if (this.__PopoverController_63 == null) {
            this.__PopoverController_63 = new import41.PopoverController(this._App_19);
        }
        return this.__PopoverController_63;
    }
    get _SystemJsNgModuleLoader_64() {
        if (this.__SystemJsNgModuleLoader_64 == null) {
            this.__SystemJsNgModuleLoader_64 = new import42.SystemJsNgModuleLoader(this._Compiler_26, this.parent.get(import42.SystemJsNgModuleLoaderConfig, null));
        }
        return this.__SystemJsNgModuleLoader_64;
    }
    get _TapClick_65() {
        if (this.__TapClick_65 == null) {
            this.__TapClick_65 = new import43.TapClick(this._Config_16, this._Platform_15, this._DomController_17, this._App_19, this.parent.get(import61.NgZone), this._GestureController_20);
        }
        return this.__TapClick_65;
    }
    get _ToastController_66() {
        if (this.__ToastController_66 == null) {
            this.__ToastController_66 = new import44.ToastController(this._App_19);
        }
        return this.__ToastController_66;
    }
    get _TransitionController_67() {
        if (this.__TransitionController_67 == null) {
            this.__TransitionController_67 = new import45.TransitionController(this._Platform_15, this._Config_16);
        }
        return this.__TransitionController_67;
    }
    get _ModuleLoader_68() {
        if (this.__ModuleLoader_68 == null) {
            this.__ModuleLoader_68 = import8.provideModuleLoader(this._DeepLinkConfigToken_51, this._SystemJsNgModuleLoader_64, this);
        }
        return this.__ModuleLoader_68;
    }
    get _UrlSerializer_69() {
        if (this.__UrlSerializer_69 == null) {
            this.__UrlSerializer_69 = import66.setupUrlSerializer(this._DeepLinkConfigToken_51);
        }
        return this.__UrlSerializer_69;
    }
    get _DeepLinker_70() {
        if (this.__DeepLinker_70 == null) {
            this.__DeepLinker_70 = import67.setupDeepLinker(this._App_19, this._UrlSerializer_69, this._Location_60, this._DeepLinkConfigToken_51, this._ModuleLoader_68, this);
        }
        return this.__DeepLinker_70;
    }
    createInternal() {
        this._CommonModule_0 = new import2.CommonModule();
        this._ApplicationModule_1 = new import3.ApplicationModule();
        this._BrowserModule_2 = new import4.BrowserModule(this.parent.get(import4.BrowserModule, null));
        this._HttpModule_3 = new import5.HttpModule();
        this._InternalFormsSharedModule_4 = new import6.InternalFormsSharedModule();
        this._FormsModule_5 = new import7.FormsModule();
        this._ReactiveFormsModule_6 = new import7.ReactiveFormsModule();
        this._IonicModule_7 = new import8.IonicModule();
        this._AppModule_8 = new import1.AppModule();
        this._ErrorHandler_11 = import4.errorHandler();
        this._ConfigToken_12 = {};
        this._DOCUMENT_13 = import4._document();
        this._PlatformConfigToken_14 = import68.providePlatformConfigs();
        this._Platform_15 = import69.setupPlatform(this._DOCUMENT_13, this._PlatformConfigToken_14, this.parent.get(import61.NgZone));
        this._Config_16 = import70.setupConfig(this._ConfigToken_12, this._Platform_15);
        this._DomController_17 = new import10.DomController(this._Platform_15);
        this._MenuController_18 = new import11.MenuController();
        this._App_19 = new import12.App(this._Config_16, this._Platform_15, this._MenuController_18);
        this._GestureController_20 = new import13.GestureController(this._App_19);
        this._APP_INITIALIZER_21 = [import71.registerModeConfigs(this._Config_16), import72.registerTransitions(this._Config_16), import33.setupProvideEvents(this._Platform_15, this._DomController_17), import43.setupTapClick(this._Config_16, this._Platform_15, this._DomController_17, this._App_19, this.parent.get(import61.NgZone), this._GestureController_20)];
        this._ApplicationInitStatus_22 = new import14.ApplicationInitStatus(this._APP_INITIALIZER_21);
        this._Testability_23 = new import15.Testability(this.parent.get(import61.NgZone));
        this._ApplicationRef__24 = new import16.ApplicationRef_(this.parent.get(import61.NgZone), this.parent.get(import73.Console), this, this._ErrorHandler_11, this, this._ApplicationInitStatus_22, this.parent.get(import15.TestabilityRegistry, null), this._Testability_23);
        return this._AppModule_8;
    }
    getInternal(token, notFoundResult) {
        if (token === import2.CommonModule) {
            return this._CommonModule_0;
        }
        if (token === import3.ApplicationModule) {
            return this._ApplicationModule_1;
        }
        if (token === import4.BrowserModule) {
            return this._BrowserModule_2;
        }
        if (token === import5.HttpModule) {
            return this._HttpModule_3;
        }
        if (token === import6.InternalFormsSharedModule) {
            return this._InternalFormsSharedModule_4;
        }
        if (token === import7.FormsModule) {
            return this._FormsModule_5;
        }
        if (token === import7.ReactiveFormsModule) {
            return this._ReactiveFormsModule_6;
        }
        if (token === import8.IonicModule) {
            return this._IonicModule_7;
        }
        if (token === import1.AppModule) {
            return this._AppModule_8;
        }
        if (token === import74.LOCALE_ID) {
            return this._LOCALE_ID_9;
        }
        if (token === import9.NgLocalization) {
            return this._NgLocalization_10;
        }
        if (token === import75.ErrorHandler) {
            return this._ErrorHandler_11;
        }
        if (token === import70.ConfigToken) {
            return this._ConfigToken_12;
        }
        if (token === import76.DOCUMENT) {
            return this._DOCUMENT_13;
        }
        if (token === import68.PlatformConfigToken) {
            return this._PlatformConfigToken_14;
        }
        if (token === import69.Platform) {
            return this._Platform_15;
        }
        if (token === import70.Config) {
            return this._Config_16;
        }
        if (token === import10.DomController) {
            return this._DomController_17;
        }
        if (token === import11.MenuController) {
            return this._MenuController_18;
        }
        if (token === import12.App) {
            return this._App_19;
        }
        if (token === import13.GestureController) {
            return this._GestureController_20;
        }
        if (token === import14.APP_INITIALIZER) {
            return this._APP_INITIALIZER_21;
        }
        if (token === import14.ApplicationInitStatus) {
            return this._ApplicationInitStatus_22;
        }
        if (token === import15.Testability) {
            return this._Testability_23;
        }
        if (token === import16.ApplicationRef_) {
            return this._ApplicationRef__24;
        }
        if (token === import16.ApplicationRef) {
            return this._ApplicationRef_25;
        }
        if (token === import17.Compiler) {
            return this._Compiler_26;
        }
        if (token === import57.APP_ID) {
            return this._APP_ID_27;
        }
        if (token === import60.HAMMER_GESTURE_CONFIG) {
            return this._HAMMER_GESTURE_CONFIG_28;
        }
        if (token === import19.EVENT_MANAGER_PLUGINS) {
            return this._EVENT_MANAGER_PLUGINS_29;
        }
        if (token === import19.EventManager) {
            return this._EventManager_30;
        }
        if (token === import20.DomSharedStylesHost) {
            return this._DomSharedStylesHost_31;
        }
        if (token === import77.AnimationDriver) {
            return this._AnimationDriver_32;
        }
        if (token === import21.DomRootRenderer) {
            return this._DomRootRenderer_33;
        }
        if (token === import78.RootRenderer) {
            return this._RootRenderer_34;
        }
        if (token === import22.DomSanitizer) {
            return this._DomSanitizer_35;
        }
        if (token === import79.Sanitizer) {
            return this._Sanitizer_36;
        }
        if (token === import23.ViewUtils) {
            return this._ViewUtils_37;
        }
        if (token === import80.IterableDiffers) {
            return this._IterableDiffers_38;
        }
        if (token === import81.KeyValueDiffers) {
            return this._KeyValueDiffers_39;
        }
        if (token === import20.SharedStylesHost) {
            return this._SharedStylesHost_40;
        }
        if (token === import24.Title) {
            return this._Title_41;
        }
        if (token === import25.BrowserXhr) {
            return this._BrowserXhr_42;
        }
        if (token === import26.ResponseOptions) {
            return this._ResponseOptions_43;
        }
        if (token === import82.XSRFStrategy) {
            return this._XSRFStrategy_44;
        }
        if (token === import27.XHRBackend) {
            return this._XHRBackend_45;
        }
        if (token === import28.RequestOptions) {
            return this._RequestOptions_46;
        }
        if (token === import83.Http) {
            return this._Http_47;
        }
        if (token === import29.RadioControlRegistry) {
            return this._RadioControlRegistry_48;
        }
        if (token === import30.FormBuilder) {
            return this._FormBuilder_49;
        }
        if (token === import84.AppRootToken) {
            return this._AppRootToken_50;
        }
        if (token === import66.DeepLinkConfigToken) {
            return this._DeepLinkConfigToken_51;
        }
        if (token === import31.ActionSheetController) {
            return this._ActionSheetController_52;
        }
        if (token === import32.AlertController) {
            return this._AlertController_53;
        }
        if (token === import33.Events) {
            return this._Events_54;
        }
        if (token === import34.Form) {
            return this._Form_55;
        }
        if (token === import35.Haptic) {
            return this._Haptic_56;
        }
        if (token === import36.Keyboard) {
            return this._Keyboard_57;
        }
        if (token === import37.LoadingController) {
            return this._LoadingController_58;
        }
        if (token === import65.LocationStrategy) {
            return this._LocationStrategy_59;
        }
        if (token === import38.Location) {
            return this._Location_60;
        }
        if (token === import39.ModalController) {
            return this._ModalController_61;
        }
        if (token === import40.PickerController) {
            return this._PickerController_62;
        }
        if (token === import41.PopoverController) {
            return this._PopoverController_63;
        }
        if (token === import42.SystemJsNgModuleLoader) {
            return this._SystemJsNgModuleLoader_64;
        }
        if (token === import43.TapClick) {
            return this._TapClick_65;
        }
        if (token === import44.ToastController) {
            return this._ToastController_66;
        }
        if (token === import45.TransitionController) {
            return this._TransitionController_67;
        }
        if (token === import85.ModuleLoader) {
            return this._ModuleLoader_68;
        }
        if (token === import66.UrlSerializer) {
            return this._UrlSerializer_69;
        }
        if (token === import67.DeepLinker) {
            return this._DeepLinker_70;
        }
        return notFoundResult;
    }
    destroyInternal() {
        this._ApplicationRef__24.ngOnDestroy();
    }
}
exports.AppModuleNgFactory = new import0.NgModuleFactory(AppModuleInjector, import1.AppModule);
//# sourceMappingURL=data:application/json;base64,